# ===========================
#  Namespace (nombre robot)
# ===========================
agl_1:
  # ===================
  #     NODOS
  # ===================
  Diagnostics:
    ros__parameters:
      # ----- ME00_diagnostics PARAMS -----
      start:
        - status
        - MergedStatus
      autorun: true
      timeout: 10    # Timeout to detect if a node is down. 

  Wheelmotor:
    ros__parameters:
      # ----- ME00_wheelmotor PARAMS -----
      # ----- Topics a publicar mediante start_launch.py -----
      start:
        - status

      # ----- ME00_wheelmotor PARAMS -----
      motor:
          usb_port: "/dev/ttyUSB0"
          max_vel: 50
          min_vel: -50


      odom:
        wheel_separation: 0.2
        wheel_radius: 0.1
        frame_id: "odom"
        child_frame_id: "base_link"
        js_topic: "joint_states"
        publish_tf: false   # False en simulacion
        publish_js: false   # False en simulacion
        publish_odom: false # False en simulacion
      
      # ----- ----- ----- ----- -----

  # Camera:
  #   # ----- ME00_camera PARAMS -----
  #   ros__parameters:
  #     start:
  #       - image_raw
  #       - camera_info
  #       - status
  #     autorun: false
  #     # 0: Simulacion, cam local
  #     # 6: Realsense color
  #     # 4: Realsense no color
  #     camera_id: 0
  #     camera_name: "usb_cam"
  #     frame_id: "base_link"
  #     width : 640
  #     height : 480
  #     framerate : 30
  #     flip_mode : 2 # 0=reverse, 2=normal
  #     camera_calibration_file: "package://me00_camera/config/usb_calibration.yaml"

  Joy:
    ros__parameters:
      autorepeat_rate: 20.0
      coalesce_interval_ms: 1
      deadzone: 0.12
      device_id: 0
      device_name: ''
      sticky_buttons: false

  Joystick:
    ros__parameters:
      # ----- ME00_joystick PARAMS -----
      start:
        - cmd_vel
        - status

      autorun: true

      commands:
        #ubuntu 18.04 
        ###############
        #        axes[0] = left arrow(-1.0)/ right arrow(1.0)
        #        axes[1] = up arrow(1.0)/ down arrow(-1.0)
        #        buttons[2] = A (1.0)
        #        buttons[1] = B (1.0)
        #        buttons[3] = X (1.0)
        #        buttons[0] = Y (1.0)
        axes_x: 1.0
        axes_y: 0.0
        button_a: 2.0
        button_b: 1.0
        button_x: 3.0
        button_y: 0.0

      speed:
        linear_gain: 10.0
        angular_gain: 5.0
        velocity: 1.0
  
  Control:
    ros__parameters:
      # ----- ME00_control PARAMS -----
      start:
        - status
        - cmd_vel
        - control
        - ADAM_Inputs
        - ADAM_Outputs
      autorun: true
      manual_pkg: "Joystick"
      autonomous_pkg: "Navigation"
      initial_mode: MANUAL  # PAUSED, MANUAL or AUTONOMOUS
      scan_front: Laser_Front/laser_scan
      scan_back: Laser_Back/laser_scan

  # Navigation:
  #   ros__parameters:
  #     start:
  #       - status
  #     autorun: true
  #     scan_topic: Laser_Merged/laser_scan
  #     odom_topic: Wheelmotor/odom
  #     scan_front: Laser_Front/laser_scan
  #     scan_back: Laser_Back/laser_scan
  #     map_topic: map
  #     map: ageve_map.yaml
  #     autorun_nav2: 'true'
  #     use_sim_time: True
  #     active_timeout: 5 # ns to detect if the service is active
  #     server_timeout: 10 # ns to wait for the response
  #     autostart_navigation: true   # to autostart the navigation when Navigation goes to RUN state
  #     autostart_localization: true # to autostart the localization when Navigation goes to RUN state      
  #     autostart_slam: false 
