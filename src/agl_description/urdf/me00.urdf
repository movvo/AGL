<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from me00.xacro                     | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="me00">
  <!-- 45ยบ -->
  <!-- locationprefix = back or front -->
  <!-- wheel_base_dx = distancia adelante atras-->
  <!-- wheel_base_dz = distancia arriba abajo -->
  <!--**************************************************************-->
  <!--DUMMY LINK (without inertia)-->
  <!--**************************************************************-->
  <link name="base_footprint"/>
  <!--**************************************************************-->
  <!--CHASSIS (base link)-->
  <!--**************************************************************-->
  <link name="base_link">
    <inertial>
      <mass value="200.0"/>
      <origin rpy="0 0 1.5620696817948965" xyz="0 0 0"/>
      <inertia ixx="34.802733333333336" ixy="0.0" ixz="0.0" iyy="15.042733333333333" iyz="0.0" izz="45.57333333333334"/>
    </inertial>
    <!--COLLISION-->
    <collision>
      <geometry>
        <mesh filename="package://me00_description/mesh/base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <!--VISUAL-->
    <visual>
      <geometry>
        <mesh filename="package://me00_description/mesh/base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="aluminum">
        <color rgba="0.8 0.8 0.8 1"/>
      </material>
    </visual>
  </link>
  <!--JOINT-->
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.219"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <!--**************************************************************-->
  <!--LEFT WHEEL-->
  <!--**************************************************************-->
  <link name="wheel_left_link">
    <inertial>
      <mass value="40.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.10533329120000001" ixy="0.0" ixz="0.0" iyy="0.10533329120000001" iyz="0.0" izz="0.2"/>
    </inertial>
    <!--COLLISION-->
    <collision>
      <geometry>
        <mesh filename="package://me00_description/mesh/wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <!--VISUAL-->
    <visual>
      <geometry>
        <mesh filename="package://me00_description/mesh/wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="yellow">
        <color rgba="0.96 0.88 0.14 1.0"/>
      </material>
    </visual>
  </link>
  <!--JOINT-->
  <joint name="wheel_left_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 0.3 -0.119"/>
    <child link="wheel_left_link"/>
    <parent link="base_link"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <!--**************************************************************-->
  <!--RIGHT WHEEL-->
  <!--**************************************************************-->
  <link name="wheel_right_link">
    <inertial>
      <mass value="40.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.10533329120000001" ixy="0.0" ixz="0.0" iyy="0.10533329120000001" iyz="0.0" izz="0.2"/>
    </inertial>
    <!--COLLISION-->
    <collision>
      <geometry>
        <mesh filename="package://me00_description/mesh/wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <!--VISUAL-->
    <visual>
      <geometry>
        <mesh filename="package://me00_description/mesh/wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="yellow">
        <color rgba="0.96 0.88 0.14 1.0"/>
      </material>
    </visual>
  </link>
  <!--JOINT-->
  <joint name="wheel_right_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 -0.3 -0.119"/>
    <child link="wheel_right_link"/>
    <parent link="base_link"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <!--**************************************************************-->
  <!--FRONT LASER-->
  <!--**************************************************************-->
  <!-- JOINT -->
  <joint name="front_laser_joint" type="fixed">
    <origin rpy="0 0 0.78539805" xyz="0.64 0.37 -0.02"/>
    <parent link="base_link"/>
    <child link="laser_front_link"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <!-- LINK -->
  <link name="laser_front_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.3097539019"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <!-- VISUAL -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/laser.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="yellow">
        <color rgba="0.96 0.88 0.14 1.0"/>
      </material>
    </visual>
    <collision>
      <!-- COLLISION -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/laser.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!--**************************************************************-->
  <!--BACK LASER-->
  <!--**************************************************************-->
  <!-- JOINT -->
  <joint name="back_laser_joint" type="fixed">
    <origin rpy="0 0 3.926990703589793" xyz="-0.64 -0.37 -0.02"/>
    <parent link="base_link"/>
    <child link="laser_back_link"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <!-- LINK -->
  <link name="laser_back_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.3097539019"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <!-- VISUAL -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/laser.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="yellow">
        <color rgba="0.96 0.88 0.14 1.0"/>
      </material>
    </visual>
    <collision>
      <!-- COLLISION -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/laser.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!--**************************************************************-->
  <!--CASTER WHEEL-->
  <!--**************************************************************-->
  <!-- caster hub/base -->
  <joint name="front_caster_rotation_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.5 0 -0.09000000000000001"/>
    <parent link="base_link"/>
    <child link="front_caster_rotation_link"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <link name="front_caster_rotation_link">
    <inertial>
      <origin rpy="0 0 1.5707963267948966 " xyz="0 0 -0.042500000044"/>
      <mass value="10.0"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/caster_base_test.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/caster_base_test.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- caster wheel -->
  <joint name="front_caster_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.038 0 -0.079"/>
    <parent link="front_caster_rotation_link"/>
    <child link="front_caster_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="front_caster_wheel_link">
    <inertial>
      <mass value="5.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0031666654000000005" ixy="0.0" ixz="0.0" iyy="0.0031666654000000005" iyz="0.0" izz="0.00625"/>
    </inertial>
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/caster_wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="cyan">
        <color rgba="0.0 0.0 0.8 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/caster_wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- caster hub/base -->
  <joint name="back_caster_rotation_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.5 0 -0.09000000000000001"/>
    <parent link="base_link"/>
    <child link="back_caster_rotation_link"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>
  <link name="back_caster_rotation_link">
    <inertial>
      <origin rpy="0 0 1.5707963267948966 " xyz="0 0 -0.042500000044"/>
      <mass value="10.0"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/caster_base_test.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/caster_base_test.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!-- caster wheel -->
  <joint name="back_caster_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.038 0 -0.079"/>
    <parent link="back_caster_rotation_link"/>
    <child link="back_caster_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="back_caster_wheel_link">
    <inertial>
      <mass value="5.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0031666654000000005" ixy="0.0" ixz="0.0" iyy="0.0031666654000000005" iyz="0.0" izz="0.00625"/>
    </inertial>
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/caster_wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="cyan">
        <color rgba="0.0 0.0 0.8 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://me00_description/mesh/caster_wheel.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <!--**************************************************************-->
  <!--BACK CASTER SPHERE WHEEL-->
  <!--**************************************************************-->
  <!-- <joint name="back_caster_sphere_joint" type="fixed">
        <origin xyz="${caster_base_back_x} ${caster_base_back_y} ${caster_base_back_z+caster_wheel_to_base_z}" rpy="0 0 0" />
        <parent link="${base_link}" />
        <child link="back_caster_sphere_link" />
    </joint>

    <link name="back_caster_sphere_link">
        <xacro:sphere_inertia m="${caster_wheel_mass}" r="${caster_radius}">
            <origin xyx="0 0 0" rpy="0 0 0" />
        </xacro:sphere_inertia>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="${caster_sphere_wheel_mesh}" scale="${mesh_scale} ${mesh_scale} ${mesh_scale}"/>
            </geometry>
            <xacro:insert_block name="material_blue"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />          
            <geometry>
                <mesh filename="${caster_sphere_wheel_mesh}" scale="${mesh_scale} ${mesh_scale} ${mesh_scale}"/>
            </geometry>
        </collision>
    </link> -->
  <!--**************************************************************-->
  <!--FRONT CASTER SPHERE WHEEL-->
  <!--**************************************************************-->
  <!-- <joint name="front_caster_sphere_joint" type="fixed">
        <origin xyz="${caster_base_front_x} ${caster_base_front_y} ${caster_base_front_z+caster_wheel_to_base_z}" rpy="0 0 0" />
        <parent link="${base_link}" />
        <child link="front_caster_sphere_link" />
    </joint>

    <link name="front_caster_sphere_link">
        <xacro:sphere_inertia m="${caster_wheel_mass}" r="${caster_radius}">
            <origin xyx="0 0 0" rpy="0 0 0" />
        </xacro:sphere_inertia>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="${caster_sphere_wheel_mesh}" scale="${mesh_scale} ${mesh_scale} ${mesh_scale}"/>
            </geometry>
            <xacro:insert_block name="material_blue"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />          
            <geometry>
                <mesh filename="${caster_sphere_wheel_mesh}" scale="${mesh_scale} ${mesh_scale} ${mesh_scale}"/>
            </geometry>
        </collision>
    </link> -->
  <!--**************************************************************-->
  <!--USB CAMERA-->
  <!--**************************************************************-->
  <link name="camera_link">
    <!--INERTIA-->
    <!--Not calling macro, just small values-->
    <inertial>
      <mass value="0.005"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <collision>
      <geometry>
        <box size="0.1 0.05 0.05"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <box size="0.1 0.05 0.05"/>
      </geometry>
      <material name="dark"/>
    </visual>
  </link>
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.7 0 0.15"/>
    <child link="camera_link"/>
    <parent link="base_link"/>
  </joint>
  <gazebo reference="base_link">
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="wheel_left_link">
    <material>Gazebo/FlatBlack</material>
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
    <minDepth>0.01</minDepth>
  </gazebo>
  <gazebo reference="wheel_right_link">
    <material>Gazebo/FlatBlack</material>
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
    <minDepth>0.01</minDepth>
  </gazebo>
  <gazebo reference="front_caster_wheel_link">
    <material>Gazebo/Blue</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <gazebo reference="back_caster_wheel_link">
    <material>Gazebo/Blue</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <!-- <gazebo reference="back_caster_sphere_link">
  <material>Gazebo/Blue</material>
  <mu1>0.01</mu1>
  <mu2>0.01</mu2>
  <kp>1000000.0</kp>
  <kd>0.01</kd>
  <minDepth>0.01</minDepth>
</gazebo>

<gazebo reference="front_caster_sphere_link">
  <material>Gazebo/Blue</material>
  <mu1>0.01</mu1>
  <mu2>0.01</mu2>
  <kp>1000000.0</kp>
  <kd>0.01</kd>
  <minDepth>0.01</minDepth>
</gazebo> -->
  <gazebo reference="front_caster_rotation_link">
    <material>Gazebo/Gray</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <gazebo reference="back_caster_rotation_link">
    <material>Gazebo/Gray</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <!--======= GAZEBO PLUGINS ===========-->
  <gazebo>
    <!--JOINT_STATES-->
    <plugin filename="libgazebo_ros_joint_state_publisher.so" name="plugin_joint_state">
      <ros>
        <namespace>/me00_1</namespace>
        <argument>joint_states:=Description/joint_states</argument>
      </ros>
      <update_rate>15.0</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
      <joint_name>front_caster_wheel_joint</joint_name>
      <joint_name>back_caster_wheel_joint</joint_name>
      <joint_name>front_caster_rotation_joint</joint_name>
      <joint_name>back_caster_rotation_joint</joint_name>
    </plugin>
    <!--DIFFERENTIAL DRIVE-->
    <plugin filename="libgazebo_ros_diff_drive.so" name="plugin_diff_drive">
      <ros>
        <namespace>/me00_1</namespace>
        <argument>cmd_vel:=Control/cmd_vel</argument>
        <argument>odom:=Wheelmotor/odom</argument>
        <argument>/tf:=tf</argument>
        <argument>/tf_static:=tf_static</argument>
      </ros>
      <update_rate>15.0</update_rate>
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>
      <wheel_separation>0.6</wheel_separation>
      <wheel_diameter>0.2</wheel_diameter>
      <max_wheel_torque>30.0</max_wheel_torque>
      <max_wheel_acceleration>0.0</max_wheel_acceleration>
      <command_topic>cmd_vel</command_topic>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>
  </gazebo>
  <!--======= LASERS PLUGINS ===========-->
  <gazebo reference="laser_front_link">
    <material value="Gazebo/Yellow"/>
    <sensor name="laser_front_link" type="ray">
      <visualize>true</visualize>
      <update_rate>12.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>541</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619449615</min_angle>
            <max_angle>2.35619449615</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.05</min>
          <max>15.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="gazebo_ros_laser_front_link_controller">
        <ros>
          <namespace>/me00_1</namespace>
          <argument>~/out:=Laser_Front/laser_scan</argument>
        </ros>
        <frame_name>laser_front_link</frame_name>
        <output_type>sensor_msgs/LaserScan</output_type>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="laser_back_link">
    <material value="Gazebo/Yellow"/>
    <sensor name="laser_back_link" type="ray">
      <visualize>true</visualize>
      <update_rate>12.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>541</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619449615</min_angle>
            <max_angle>2.35619449615</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.05</min>
          <max>15.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="gazebo_ros_laser_back_link_controller">
        <ros>
          <namespace>/me00_1</namespace>
          <argument>~/out:=Laser_Back/laser_scan</argument>
        </ros>
        <frame_name>laser_back_link</frame_name>
        <output_type>sensor_msgs/LaserScan</output_type>
      </plugin>
    </sensor>
  </gazebo>
  <!--======= CAMERA PLUGIN ===========-->
  <gazebo reference="camera_link">
    <material>Gazebo/FlatBlack</material>
    <sensor name="Camera" type="depth">
      <!-- Set always_on only sensor, not on plugin -->
      <always_on>1</always_on>
      <!-- Set update_rate only sensor, not on plugin -->
      <update_rate>15.0</update_rate>
      <camera name="Camera">
        <distortion>
          <k1>0.0</k1>
          <k2>0.0</k2>
          <k3>0.0</k3>
          <p1>0.0</p1>
          <p2>0.0</p2>
          <center>0.0 0.0</center>
        </distortion>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="plugin_name">
        <!-- Change namespace, camera name and topics so:
                  * Raw images are published to: /custom_ns/custom_camera/custom_image
                  * Depth images are published to: /custom_ns/custom_camera/custom_image_depth
                  * Raw image camera info is published to: /custom_ns/custom_camera/custom_info_raw
                  * Depth image camera info is published to: /custom_ns/custom_camera/custom_info_depth
                  * Point cloud is published to: /custom_ns/custom_camera/custom_points 
              -->
        <ros>
          <namespace>/me00_1</namespace>
          <argument>image_raw:=image_raw</argument>
        </ros>
        <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
        <camera_name>Camera</camera_name>
        <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
        <frame_name>camera_link</frame_name>
        <hack_baseline>0.07</hack_baseline>
        <!-- No need to repeat distortion parameters or to set autoDistortion -->
        <min_depth>0.001</min_depth>
      </plugin>
    </sensor>
  </gazebo>
</robot>
